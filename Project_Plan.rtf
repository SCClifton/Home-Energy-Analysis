{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 .SFNS-Bold;\f2\fnil\fcharset0 .SFNS-Regular;
\f3\froman\fcharset0 TimesNewRomanPSMT;\f4\fnil\fcharset0 .SFNS-Regular_wdth_opszC0000_GRAD_wght;\f5\fnil\fcharset0 .SFNS-Regular_wdth_opszD0000_GRAD_wght;
\f6\fmodern\fcharset0 Courier;\f7\fnil\fcharset0 Menlo-Regular;\f8\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;
}
{\colortbl;\red255\green255\blue255;\red14\green14\blue14;\red0\green0\blue0;\red151\green0\blue126;
\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c6700\c6700\c6700;\csgray\c0;\cssrgb\c66667\c5098\c56863;
\cssrgb\c0\c0\c0\cname textColor;}
\paperw11900\paperh16840\margl1440\margr1440\vieww16680\viewh18460\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\b\fs34 \cf2 1. Home Energy Dashboard Project
\f2\b0\fs28 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\b \cf2 Project Name:
\f2\b0 \cf2  Home Energy Analysis\
\

\f1\b \cf2 Overview:
\f2\b0 \cf2 \
The Vaucluse Energy Analysis project aims to collect, store, analyse, and visualise energy usage data from your apartment in Vaucluse, Sydney. Amber Electric provides an API for retrieving live and historical energy data; this project will ingest that data, perform analyses on usage patterns, and generate insights that help optimise energy consumption and cost. Further analysis will simulate solar, solar plus battery energy storage system and EV home charging to investigate how home electrification will effect energy usage and cost over time. \
\

\f1\b \cf2 Key Objectives
\f2\b0 \cf2 \
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	1.	
\f1\b Data Ingestion:
\f2\b0  Securely integrate with Amber Electric\'92s API to fetch energy usage in near real-time or via scheduled tasks.\

\f3 	2.	
\f1\b Data Storage:
\f2\b0  Store the data in a reliable, secure and scalable format (e.g. a time-series database or cloud storage).\

\f3 	3.	
\f1\b Analytics and Visualisation:
\f2\b0  Perform data cleaning, transformation, and analysis. Provide visual dashboards/reports of usage patterns, costs, and environmental impact.\

\f3 	4.	
\f1\b Alerts and Monitoring:
\f2\b0  Implement monitoring (e.g. usage spikes, unexpected downtime) and set up alerts for anomaly detection.\

\f3 	5.	
\f1\b Documentation and Best Practices:
\f2\b0  Ensure the project is well-documented and follows clean code, CI/CD, and DevOps best practices.
\f0\fs24 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\b\fs34 \cf2 2. Project Plan
\f2\b0\fs28 \
\
Below is a phased approach to building the project, from initial planning to deployment and monitoring:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\b\fs30 \cf2 Phase 1: Requirements & Design
\f2\b0\fs28 \cf2 \
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	1.	
\f1\b Requirements Gathering:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Define data granularity (e.g. hourly, daily).\
	\'95	Confirm data retention policy.\
	\'95	Clarify project constraints (budget, time, team members).\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	2.	
\f1\b Technical Feasibility:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Confirm connectivity to Amber Electric API (authentication method, rate limits).\
	\'95	Choose a technology stack (e.g. Python + Flask/FastAPI, React/Next.js for the front-end, PostgreSQL for data store, or an equivalent).\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	3.	
\f1\b Architecture Design:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Sketch out the data flow: API \uc0\u8594  Ingestion pipeline \u8594  Database \u8594  Analysis \u8594  Visualisation.\
	\'95	Decide on hosting (cloud vs on-premises, e.g. AWS, Azure, GCP).\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\b\fs30 \cf2 Phase 2: Project Setup & Code Infrastructure
\f2\b0\fs28 \cf2 \
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	1.	
\f1\b Version Control Setup:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Create a Git repository (GitHub/Bitbucket/GitLab).\
	\'95	Enforce code reviews, branching strategies, and commit message guidelines.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	2.	
\f1\b Directory Structure
\f2\b0  (example given in detail below).\
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 		\'95 Directory on local machine /Users/samuelclifton/Dropbox/5. Personal Development/Projects/Home-Energy-Analysis\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	3.	
\f1\b Environment Setup:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Configure Python virtual environments or Docker containers for reproducibility.\
	\'95	Define environment variables for sensitive data (API keys, database credentials).\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	4.	
\f1\b Continuous Integration (CI):
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Set up a CI pipeline (GitHub Actions) to lint, test, and build the project on each commit.\
5. 
\f1\b Project Management:\

\f2\b0 	\'95	
\f4 \cf0 \expnd0\expndtw0\kerning0
Document project progress in a 
\f5 PROJECT_PROGRESS.md
\f4  file, including, date and time of entries, key decisions made, challenges encountered and solutions implemented, links to relevant resources (code commits, documentation, etc), visualisations (diagrams and charts) and any other information  relevant for future AI prompting and project recording. 
\f2 \cf2 \kerning1\expnd0\expndtw0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\b\fs30 \cf2 Phase 3: Data Ingestion & Storage
\f2\b0\fs28 \cf2 \
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	1.	
\f1\b Amber Electric API Integration:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Implement a data ingestion service that periodically calls the Amber Electric API to fetch data.\
	\'95	Handle authentication securely (API tokens/keys stored in environment variables or a secrets manager).\
	\'95	Parse JSON responses into a structured format.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	2.	
\f1\b Data Storage:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Use a time-series database like InfluxDB or TimescaleDB (extension of PostgreSQL) for granular energy data.\
	\'95	Alternatively, store raw data in AWS S3 (or equivalent) and load summarised data into a relational database.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	3.	
\f1\b Basic Data Processing Pipeline:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Perform minimal data cleaning (e.g. handle missing timestamps, outlier removal).\
	\'95	Implement data validation against a schema. \
	\'95	Store both raw and cleaned data for reproducibility.\
	\'95	Explore data versioning using tools like DVC. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\b\fs30 \cf2 Phase 4: Analysis & Visualisation
\f2\b0\fs28 \cf2 \
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	1.	
\f1\b Data Analysis Models:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Compute daily, weekly, monthly usage averages.\
	\'95	Identify usage peaks and patterns over time.\
	\'95	Optionally integrate weather data for correlation analysis.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	2.	
\f1\b Visualisation Tools:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Set up interactive dashboards (e.g. Plotly Dash, Grafana, or a custom front-end using React/Next.js).\
	\'95	Include graphs for real-time usage, daily/monthly consumption trends, cost breakdowns.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	3.	
\f1\b Reporting and Insights:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Generate automated reports (PDF or HTML) on a daily or weekly schedule.\
	\'95	Summarise cost analyses, usage anomalies, and recommended energy savings.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\b\fs30 \cf2 Phase 5: Monitoring & Alerting
\f2\b0\fs28 \cf2 \
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	1.	
\f1\b Application Monitoring:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Use tools like Prometheus + Grafana or AWS CloudWatch to monitor service metrics (CPU, memory, network).\
	\'95	Set up health checks on the API ingestion service.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	2.	
\f1\b Data Monitoring & Alerts:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Implement anomaly detection on usage data (e.g. usage spikes).\
	\'95	Send alerts (Slack, email) if usage crosses certain thresholds or if data ingestion fails.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	3.	
\f1\b Logging & Error Handling:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Centralise logs (e.g. in Elasticsearch, Logstash, Kibana stack).\
	\'95	Implement robust error handling within your ingestion and analysis pipelines.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\b\fs30 \cf2 Phase 6: Documentation & Knowledge Transfer
\f2\b0\fs28 \cf2 \
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	1.	
\f1\b Technical Documentation:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Maintain a well-structured README that covers installation, usage, data structure, and environment setup.\
	\'95	Use docstrings in the code (e.g. Python docstrings for functions and classes).\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	2.	
\f1\b User Documentation:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Provide end-users with instructions on how to interpret dashboards or reports.\
	\'95	Include a glossary for any energy-specific terminology.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	3.	
\f1\b Handover/Training:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Conduct a walkthrough for collaborators on architecture, codebase, and procedures for deploying or updating.
\f0\fs24 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\b\fs34 \cf2 3. Best Practices & Recommendations
\f2\b0\fs28 \
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	1.	
\f1\b Code Generation & Style:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Adopt a popular style guide (PEP 8 for Python).\
	\'95	Use automated linters (flake8, black, isort) to maintain consistency.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	2.	
\f1\b Security:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Store keys and credentials securely (Vault or .env files).\
	\'95	Use HTTPS for all API calls and follow best practices for authentication (token rotation, etc.).\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	3.	
\f1\b Documentation Standards:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Use Markdown or Sphinx for code documentation.\
	\'95	Include UML diagrams or architecture flowcharts where relevant.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	4.	
\f1\b Scalability & Performance:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Ensure the pipeline can handle larger amounts of data or expansions (additional sensors, new apartments, etc.).\
	\'95	Optimise queries and data transformations, especially if planning real-time dashboards.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	5.	
\f1\b Testing:
\f2\b0 \
\pard\tqr\tx500\tx660\li660\fi-660\sl324\slmult1\sb240\partightenfactor0
\cf2 	\'95	Write unit tests for data ingestion, data processing, and analytics modules.\
	\'95	Introduce integration tests to ensure the pipeline runs end-to-end seamlessly.
\f0\fs24 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\b\fs34 \cf2 4. Suggested Project Directory Structure
\f2\b0\fs28 \
\
A well-structured directory helps with clarity and scalability. An example could be:
\f0\fs24 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f6\fs28 \cf3 home-energy-analysis/\

\f7 \uc0\u9500 \u9472 \u9472 
\f6  .github/workflows/          # CI/CD configuration (e.g. GitHub Actions)\

\f7 \uc0\u9500 \u9472 \u9472 
\f6  docs/                       # Technical and user documentation\

\f7 \uc0\u9500 \u9472 \u9472 
\f6  src/\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9500 \u9472 \u9472 
\f6  ingestion/\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9500 \u9472 \u9472 
\f6  amber_api.py        # Functions to call Amber Electric API\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9492 \u9472 \u9472 
\f6  scheduler.py        # Scripts to schedule data fetching\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9500 \u9472 \u9472 
\f6  processing/\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9492 \u9472 \u9472 
\f6  data_cleaning.py    # Outlier handling, missing data checks\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9500 \u9472 \u9472 
\f6  analysis/\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9492 \u9472 \u9472 
\f6  analytics.py        # Statistical analysis, anomaly detection\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9500 \u9472 \u9472 
\f6  visualisation/\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9492 \u9472 \u9472 
\f6  dashboard.py        # Dashboard or web application code\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9492 \u9472 \u9472 
\f6  main.py                 # Main entry point \cf4 for\cf3  the project\

\f7 \uc0\u9500 \u9472 \u9472 
\f6  tests/\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9500 \u9472 \u9472 
\f6  test_ingestion.py\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9500 \u9472 \u9472 
\f6  test_processing.py\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9500 \u9472 \u9472 
\f6  test_analysis.py\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9492 \u9472 \u9472 
\f6  ...\

\f7 \uc0\u9500 \u9472 \u9472 
\f6  config/\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9500 \u9472 \u9472 
\f6  settings.yaml           # Configuration \cf4 for\cf3  environment-specific settings\

\f7 \uc0\u9474 
\f6    
\f7 \uc0\u9492 \u9472 \u9472 
\f6  credentials.yaml        # (Avoid storing actual secrets in the repo)\

\f7 \uc0\u9500 \u9472 \u9472 
\f6  .env.example                # Example file \cf4 for\cf3  environment variables\

\f7 \uc0\u9500 \u9472 \u9472 
\f6  requirements.txt            # Python dependencies\

\f7 \uc0\u9500 \u9472 \u9472 
\f6  Dockerfile                  # Docker image configuration\

\f7 \uc0\u9500 \u9472 \u9472 
\f6  docker-compose.yml          # Docker Compose setup (\cf4 if\cf3  relevant)\

\f7 \uc0\u9492 \u9472 \u9472 
\f6  README.md                   # Main project overview
\f0\fs24 \cf0 \
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl324\slmult1\pardirnatural\partightenfactor0

\f1\b\fs30 \cf2 Next Steps
\f2\b0\fs28 \cf2 \
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\f3 \cf2 	1.	
\f1\b Create a Git repository
\f2\b0  and initialise it with the recommended directory structure.\

\f3 	2.	
\f1\b Set up your environment
\f2\b0  by installing dependencies (
\f8 requirements.txt
\f2 ) and configuring environment variables.\

\f3 	3.	
\f1\b Implement the ingestion pipeline
\f2\b0  to fetch data from Amber Electric\'92s API.\

\f3 	4.	
\f1\b Begin your data cleaning and transformation
\f2\b0  to ensure consistent and accurate input for your analysis.\

\f3 	5.	
\f1\b Build visualisations and analytics
\f2\b0  (Phase 4).\

\f3 	6.	
\f1\b Implement robust monitoring and alerting
\f2\b0  (Phase 5).\

\f3 	7.	
\f1\b Maintain thorough documentation
\f2\b0  for ease of collaboration and future scale-up.\
\pard\tqr\tx260\tx420\li420\fi-420\sl324\slmult1\sb240\partightenfactor0

\fs24 \cf2 My machine is:\
\pard\tx2991\li2991\fi-2992\partightenfactor0
\cf5  Model Name:	MacBook Air\
  Model Identifier:	Mac14,15\
  Model Number:	Z18Q000RSX/A\
  Chip:	Apple M2\
  Total Number of Cores:	8 (4 performance and 4 efficiency)\
  Memory:	16 GB\
  System Firmware Version:	11881.61.3\
  OS Loader Version:	11881.61.3\
\
\pard\tx3212\li3212\fi-3213\partightenfactor0
\cf5 System Software Overview:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf5 \
\pard\tx3212\li3212\fi-3213\partightenfactor0
\cf5   System Version:	macOS 15.2 (24C101)\
  Kernel Version:	Darwin 24.2.0\
  Boot Volume:	Macintosh HD\
  Boot Mode:	Normal\
  Computer Name:	Samuel\'92s MacBook Air\
  Username:	Samuel Clifton (samuelclifton)\
  Secure Virtual Memory:	Enabled\
	Enabled}